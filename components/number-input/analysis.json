{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`number-input` is an element that can:\n* prevent non numeric input\n* guarantee **live**-data to be valid\n* pad a value with `0` (to a specific length)\n* size the input (according to it's length)\n* overflow to minimum or underflow to maximum\n* saturate to minimum or to maximum\n* display a specified unit and size the input\n* specify the decimal separator (the value will still be a Number object)\n* use percent-format\n\nExample:\n```html\n<number-input step=\"2\" min=\"-20\" max=\"140\" pad-length=\"2\"></number-input>\n```\n\nIt sizes automatically. Use `key-up` and `key-down` to increment the value. If `step` is given, the value is a **multiple** of `step`.\n\n### Styling\nCustom property                   | Description                                  | Default\n----------------------------------|----------------------------------------------|--------------------\n`--number-input`                  | style of the input                           | {}\n`--number-input-focus`            | style of the focussed and hovered input      | {}\n`--number-input-placeholder`      | style of the placeholder                     | {}\n`--number-input-color`            | color of the input                           | inherit\n`--number-input-background`       | background of the input                      | inherit\n`--number-input-focus-color`      | color of the focussed and hovered input      | inherit\n`--number-input-focus-background` | background of the focussed and hovered input | inherit\n`--number-input-disabled-color`   | color of the disabled input                  | inherit\n\n```css\n:host {\n  --number-input-disabled-color: grey;\n  --number-input-focus-background: rgba(0,0,0,0.25);\n  --number-input-focus: {\n    font-weight: bold;\n  };\n  --number-input-placeholder: {\n    color: pink;\n  };\n}\n```",
      "summary": "",
      "path": "number-input.html",
      "properties": [
        {
          "name": "min",
          "type": "number",
          "description": "minimal input",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 17,
              "column": 10
            },
            "end": {
              "line": 19,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "max",
          "type": "number",
          "description": "maximal input",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 24,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "step",
          "type": "number",
          "description": "step for changing the input (referencing to `min` or `0`)",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 35,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_updateValue\""
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "value",
          "type": "string",
          "description": "value of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\form-element-mixin.html",
            "start": {
              "line": 37,
              "column": 10
            },
            "end": {
              "line": 39,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "type": "number",
          "description": "default-value of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "saturate",
          "type": "boolean",
          "description": "if true, the value does not revolve the range according to the maximum or the minimum",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_updateValue\""
            }
          },
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "noClamp",
          "type": "boolean",
          "description": "if true, the value does not clamp according to the given step",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_updateValue\""
            }
          },
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "required",
          "type": "boolean",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\form-element-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 18,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "disables the input",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\form-element-mixin.html",
            "start": {
              "line": 23,
              "column": 10
            },
            "end": {
              "line": 25,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "name",
          "type": "string",
          "description": "name of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\form-element-mixin.html",
            "start": {
              "line": 30,
              "column": 10
            },
            "end": {
              "line": 32,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "padLength",
          "type": "number",
          "description": "length to pad the string (with `0`) according to the total amount of numbers",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 10
            },
            "end": {
              "line": 94,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "placeholder",
          "type": "string",
          "description": "placeholder string",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 100,
              "column": 10
            },
            "end": {
              "line": 102,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "inPercent",
          "type": "string",
          "description": "if true the value string is percent-format\nnotice: min, max and step are not in percent (so e.g. if step is 0.001, it means that the step is 0.1%)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 10
            },
            "end": {
              "line": 112,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_unitChanged\""
            }
          },
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "noAutoWidth",
          "type": "boolean",
          "description": "disable autosizing",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 10
            },
            "end": {
              "line": 122,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_noAutoWidthChanged\""
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "autoPadding",
          "type": "boolean",
          "description": "enables auto padding",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 10
            },
            "end": {
              "line": 130,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "valueString",
          "type": "string",
          "description": "value string of the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 10
            },
            "end": {
              "line": 140,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueStringChanged\""
            }
          },
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "unit",
          "type": "string",
          "description": "unit of the value",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 10
            },
            "end": {
              "line": 149,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_unitChanged\""
            }
          },
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "locale",
          "type": "string",
          "description": "The current locale to set the decimal-separator automatically",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 10
            },
            "end": {
              "line": 158,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_localeChanged\""
            }
          },
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "decimalSeparator",
          "type": "string",
          "description": "Separator for local decimal values",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 10
            },
            "end": {
              "line": 166,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "alwaysSign",
          "type": "string",
          "description": "always put the sign in the beginning",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 10
            },
            "end": {
              "line": 174,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "minimumFractionDigits",
          "type": "number",
          "description": "minimum digits right to the decimal separator",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 180,
              "column": 10
            },
            "end": {
              "line": 183,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "minimumIntegerDigits",
          "type": "number",
          "description": "minimum digits left to the decimal separator",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 10
            },
            "end": {
              "line": 192,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_longestStaticLength",
          "type": "number",
          "description": "longest number-string of the given range",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 198,
              "column": 10
            },
            "end": {
              "line": 201,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_regExpDecimalSeparator",
          "type": "RegExp",
          "description": "regular expression to detect the decimal separator",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 207,
              "column": 10
            },
            "end": {
              "line": 210,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_regExpNotInNumber",
          "type": "RegExp",
          "description": "regular expression to parse the numeric parts of a number string",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 216,
              "column": 10
            },
            "end": {
              "line": 219,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "NumberInputMixin"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 230,
              "column": 6
            },
            "end": {
              "line": 238,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_minMaxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 84,
              "column": 6
            },
            "end": {
              "line": 93,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            },
            {
              "name": "max"
            }
          ],
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 334,
              "column": 6
            },
            "end": {
              "line": 351,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "oldValue"
            }
          ],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_checkValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 106,
              "column": 6
            },
            "end": {
              "line": 136,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "oldValue"
            }
          ],
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "_updateValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 138,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "_checkStep",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 144,
              "column": 6
            },
            "end": {
              "line": 157,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "step"
            }
          ],
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "_safeMult",
          "description": "emulating handwritten multiplication",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 165,
              "column": 6
            },
            "end": {
              "line": 187,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a",
              "type": "[number]",
              "description": "[factor]"
            },
            {
              "name": "b",
              "type": "[number]",
              "description": "[factor]"
            }
          ],
          "return": {
            "type": "[type]",
            "desc": "[product]"
          },
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "_safeAdd",
          "description": "emulating handwritten addition",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 195,
              "column": 6
            },
            "end": {
              "line": 214,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a",
              "type": "[number]",
              "description": "[summand]"
            },
            {
              "name": "b",
              "type": "[number]",
              "description": "[summand]"
            }
          ],
          "return": {
            "type": "[type]",
            "desc": "[sum]"
          },
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "validate",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 291,
              "column": 6
            },
            "end": {
              "line": 295,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 240,
              "column": 6
            },
            "end": {
              "line": 244,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_computeMinimumFractionDigits",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 246,
              "column": 6
            },
            "end": {
              "line": 251,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            },
            {
              "name": "min"
            },
            {
              "name": "max"
            }
          ],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_computeMinimumIntegerDigits",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 253,
              "column": 6
            },
            "end": {
              "line": 264,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "autoPadding"
            },
            {
              "name": "padLength"
            },
            {
              "name": "min"
            },
            {
              "name": "max"
            },
            {
              "name": "minimumFractionDigits"
            }
          ],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_computePadding",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 266,
              "column": 6
            },
            "end": {
              "line": 270,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "autoPadding"
            },
            {
              "name": "minimumIntegerDigits"
            },
            {
              "name": "minimumFractionDigits"
            }
          ],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_computeLongestStatic",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 272,
              "column": 6
            },
            "end": {
              "line": 277,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            },
            {
              "name": "max"
            },
            {
              "name": "placeholder"
            },
            {
              "name": "minimumIntegerDigits"
            },
            {
              "name": "minimumFractionDigits"
            }
          ],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_computeChWidth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 279,
              "column": 6
            },
            "end": {
              "line": 281,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_computeRegExpDecimalSeparator",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 283,
              "column": 6
            },
            "end": {
              "line": 285,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "decimalSeparator"
            }
          ],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_computeRegExpNotInNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 287,
              "column": 6
            },
            "end": {
              "line": 289,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "decimalSeparator"
            }
          ],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_unitChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 297,
              "column": 6
            },
            "end": {
              "line": 307,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_valueStringChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 309,
              "column": 6
            },
            "end": {
              "line": 332,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueString"
            },
            {
              "name": "oldValueString"
            }
          ],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_checkKeycode",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 353,
              "column": 6
            },
            "end": {
              "line": 381,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_startIncrem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 383,
              "column": 6
            },
            "end": {
              "line": 392,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            }
          ],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_stopIncrem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 394,
              "column": 6
            },
            "end": {
              "line": 398,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_increm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 400,
              "column": 6
            },
            "end": {
              "line": 405,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            }
          ],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_updateView",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 407,
              "column": 6
            },
            "end": {
              "line": 411,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_debouncedComputeWidth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 413,
              "column": 6
            },
            "end": {
              "line": 418,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueString"
            }
          ],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_computeWidth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 420,
              "column": 6
            },
            "end": {
              "line": 434,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueString"
            }
          ],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_noAutoWidthChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 436,
              "column": 6
            },
            "end": {
              "line": 444,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "noAutoWidth"
            }
          ],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "_localeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 446,
              "column": 6
            },
            "end": {
              "line": 454,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "focus",
          "description": "focus the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 459,
              "column": 6
            },
            "end": {
              "line": 461,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "blur",
          "description": "focus the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 466,
              "column": 6
            },
            "end": {
              "line": 468,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "formatNumber",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 470,
              "column": 6
            },
            "end": {
              "line": 497,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "NumberInputMixin"
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 554,
          "column": 4
        },
        "end": {
          "line": 559,
          "column": 5
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "NumberInput",
      "attributes": [
        {
          "name": "min",
          "description": "minimal input",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 17,
              "column": 10
            },
            "end": {
              "line": 19,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "max",
          "description": "maximal input",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 24,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "step",
          "description": "step for changing the input (referencing to `min` or `0`)",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 35,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "value",
          "description": "value of the input",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\form-element-mixin.html",
            "start": {
              "line": 37,
              "column": 10
            },
            "end": {
              "line": 39,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "description": "default-value of the input",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "saturate",
          "description": "if true, the value does not revolve the range according to the maximum or the minimum",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "no-clamp",
          "description": "if true, the value does not clamp according to the given step",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "required",
          "description": "required attribute",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\form-element-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 18,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "description": "disables the input",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\form-element-mixin.html",
            "start": {
              "line": 23,
              "column": 10
            },
            "end": {
              "line": 25,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "name",
          "description": "name of the input",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\form-element-mixin.html",
            "start": {
              "line": 30,
              "column": 10
            },
            "end": {
              "line": 32,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "pad-length",
          "description": "length to pad the string (with `0`) according to the total amount of numbers",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 10
            },
            "end": {
              "line": 94,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "placeholder",
          "description": "placeholder string",
          "sourceRange": {
            "start": {
              "line": 100,
              "column": 10
            },
            "end": {
              "line": 102,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "in-percent",
          "description": "if true the value string is percent-format\nnotice: min, max and step are not in percent (so e.g. if step is 0.001, it means that the step is 0.1%)",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 10
            },
            "end": {
              "line": 112,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "no-auto-width",
          "description": "disable autosizing",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 10
            },
            "end": {
              "line": 122,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "auto-padding",
          "description": "enables auto padding",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 10
            },
            "end": {
              "line": 130,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "value-string",
          "description": "value string of the input",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 10
            },
            "end": {
              "line": 140,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "unit",
          "description": "unit of the value",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 10
            },
            "end": {
              "line": 149,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "locale",
          "description": "The current locale to set the decimal-separator automatically",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 10
            },
            "end": {
              "line": 158,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "decimal-separator",
          "description": "Separator for local decimal values",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 10
            },
            "end": {
              "line": 166,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "always-sign",
          "description": "always put the sign in the beginning",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 10
            },
            "end": {
              "line": 174,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "minimum-fraction-digits",
          "description": "minimum digits right to the decimal separator",
          "sourceRange": {
            "start": {
              "line": 180,
              "column": 10
            },
            "end": {
              "line": 183,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "NumberInputMixin"
        },
        {
          "name": "minimum-integer-digits",
          "description": "minimum digits left to the decimal separator",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 10
            },
            "end": {
              "line": 192,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "NumberInputMixin"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "number-input",
      "mixins": [
        "NumberInputMixin"
      ]
    }
  ],
  "mixins": [
    {
      "description": "mixin to create a number-input",
      "summary": "",
      "path": "number-input.html",
      "properties": [
        {
          "name": "min",
          "type": "number",
          "description": "minimal input",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 17,
              "column": 10
            },
            "end": {
              "line": 19,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "max",
          "type": "number",
          "description": "maximal input",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 24,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "step",
          "type": "number",
          "description": "step for changing the input (referencing to `min` or `0`)",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 35,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_updateValue\""
            }
          },
          "defaultValue": "1",
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "value",
          "type": "string",
          "description": "value of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\form-element-mixin.html",
            "start": {
              "line": 37,
              "column": 10
            },
            "end": {
              "line": 39,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "type": "number",
          "description": "default-value of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "saturate",
          "type": "boolean",
          "description": "if true, the value does not revolve the range according to the maximum or the minimum",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_updateValue\""
            }
          },
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "noClamp",
          "type": "boolean",
          "description": "if true, the value does not clamp according to the given step",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_updateValue\""
            }
          },
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "required",
          "type": "boolean",
          "description": "required attribute",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\form-element-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 18,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "disables the input",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\form-element-mixin.html",
            "start": {
              "line": 23,
              "column": 10
            },
            "end": {
              "line": 25,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "name",
          "type": "string",
          "description": "name of the input",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\form-element-mixin.html",
            "start": {
              "line": 30,
              "column": 10
            },
            "end": {
              "line": 32,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "padLength",
          "type": "number",
          "description": "length to pad the string (with `0`) according to the total amount of numbers",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 10
            },
            "end": {
              "line": 94,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "placeholder",
          "type": "string",
          "description": "placeholder string",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 100,
              "column": 10
            },
            "end": {
              "line": 102,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "inPercent",
          "type": "string",
          "description": "if true the value string is percent-format\nnotice: min, max and step are not in percent (so e.g. if step is 0.001, it means that the step is 0.1%)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 10
            },
            "end": {
              "line": 112,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_unitChanged\""
            }
          }
        },
        {
          "name": "noAutoWidth",
          "type": "boolean",
          "description": "disable autosizing",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 10
            },
            "end": {
              "line": 122,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_noAutoWidthChanged\""
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "autoPadding",
          "type": "boolean",
          "description": "enables auto padding",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 10
            },
            "end": {
              "line": 130,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "valueString",
          "type": "string",
          "description": "value string of the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 10
            },
            "end": {
              "line": 140,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueStringChanged\""
            }
          }
        },
        {
          "name": "unit",
          "type": "string",
          "description": "unit of the value",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 10
            },
            "end": {
              "line": 149,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_unitChanged\""
            }
          }
        },
        {
          "name": "locale",
          "type": "string",
          "description": "The current locale to set the decimal-separator automatically",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 10
            },
            "end": {
              "line": 158,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_localeChanged\""
            }
          }
        },
        {
          "name": "decimalSeparator",
          "type": "string",
          "description": "Separator for local decimal values",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 10
            },
            "end": {
              "line": 166,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "alwaysSign",
          "type": "string",
          "description": "always put the sign in the beginning",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 10
            },
            "end": {
              "line": 174,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "minimumFractionDigits",
          "type": "number",
          "description": "minimum digits right to the decimal separator",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 180,
              "column": 10
            },
            "end": {
              "line": 183,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "minimumIntegerDigits",
          "type": "number",
          "description": "minimum digits left to the decimal separator",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 10
            },
            "end": {
              "line": 192,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_longestStaticLength",
          "type": "number",
          "description": "longest number-string of the given range",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 198,
              "column": 10
            },
            "end": {
              "line": 201,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_regExpDecimalSeparator",
          "type": "RegExp",
          "description": "regular expression to detect the decimal separator",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 207,
              "column": 10
            },
            "end": {
              "line": 210,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_regExpNotInNumber",
          "type": "RegExp",
          "description": "regular expression to parse the numeric parts of a number string",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 216,
              "column": 10
            },
            "end": {
              "line": 219,
              "column": 11
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 230,
              "column": 6
            },
            "end": {
              "line": 238,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_minMaxChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 84,
              "column": 6
            },
            "end": {
              "line": 93,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            },
            {
              "name": "max"
            }
          ],
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 334,
              "column": 6
            },
            "end": {
              "line": 351,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "oldValue"
            }
          ]
        },
        {
          "name": "_checkValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 106,
              "column": 6
            },
            "end": {
              "line": 136,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "oldValue"
            }
          ],
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "_updateValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 138,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "_checkStep",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 144,
              "column": 6
            },
            "end": {
              "line": 157,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            },
            {
              "name": "step"
            }
          ],
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "_safeMult",
          "description": "emulating handwritten multiplication",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 165,
              "column": 6
            },
            "end": {
              "line": 187,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a",
              "type": "[number]",
              "description": "[factor]"
            },
            {
              "name": "b",
              "type": "[number]",
              "description": "[factor]"
            }
          ],
          "return": {
            "type": "[type]",
            "desc": "[product]"
          },
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "_safeAdd",
          "description": "emulating handwritten addition",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 195,
              "column": 6
            },
            "end": {
              "line": 214,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "a",
              "type": "[number]",
              "description": "[summand]"
            },
            {
              "name": "b",
              "type": "[number]",
              "description": "[summand]"
            }
          ],
          "return": {
            "type": "[type]",
            "desc": "[sum]"
          },
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "validate",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 291,
              "column": 6
            },
            "end": {
              "line": 295,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 240,
              "column": 6
            },
            "end": {
              "line": 244,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_computeMinimumFractionDigits",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 246,
              "column": 6
            },
            "end": {
              "line": 251,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            },
            {
              "name": "min"
            },
            {
              "name": "max"
            }
          ]
        },
        {
          "name": "_computeMinimumIntegerDigits",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 253,
              "column": 6
            },
            "end": {
              "line": 264,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "autoPadding"
            },
            {
              "name": "padLength"
            },
            {
              "name": "min"
            },
            {
              "name": "max"
            },
            {
              "name": "minimumFractionDigits"
            }
          ]
        },
        {
          "name": "_computePadding",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 266,
              "column": 6
            },
            "end": {
              "line": 270,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "autoPadding"
            },
            {
              "name": "minimumIntegerDigits"
            },
            {
              "name": "minimumFractionDigits"
            }
          ]
        },
        {
          "name": "_computeLongestStatic",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 272,
              "column": 6
            },
            "end": {
              "line": 277,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "min"
            },
            {
              "name": "max"
            },
            {
              "name": "placeholder"
            },
            {
              "name": "minimumIntegerDigits"
            },
            {
              "name": "minimumFractionDigits"
            }
          ]
        },
        {
          "name": "_computeChWidth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 279,
              "column": 6
            },
            "end": {
              "line": 281,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "str"
            }
          ]
        },
        {
          "name": "_computeRegExpDecimalSeparator",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 283,
              "column": 6
            },
            "end": {
              "line": 285,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "decimalSeparator"
            }
          ]
        },
        {
          "name": "_computeRegExpNotInNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 287,
              "column": 6
            },
            "end": {
              "line": 289,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "decimalSeparator"
            }
          ]
        },
        {
          "name": "_unitChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 297,
              "column": 6
            },
            "end": {
              "line": 307,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_valueStringChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 309,
              "column": 6
            },
            "end": {
              "line": 332,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueString"
            },
            {
              "name": "oldValueString"
            }
          ]
        },
        {
          "name": "_checkKeycode",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 353,
              "column": 6
            },
            "end": {
              "line": 381,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ]
        },
        {
          "name": "_startIncrem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 383,
              "column": 6
            },
            "end": {
              "line": 392,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            }
          ]
        },
        {
          "name": "_stopIncrem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 394,
              "column": 6
            },
            "end": {
              "line": 398,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_increm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 400,
              "column": 6
            },
            "end": {
              "line": 405,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "step"
            }
          ]
        },
        {
          "name": "_updateView",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 407,
              "column": 6
            },
            "end": {
              "line": 411,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "prop"
            }
          ]
        },
        {
          "name": "_debouncedComputeWidth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 413,
              "column": 6
            },
            "end": {
              "line": 418,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueString"
            }
          ]
        },
        {
          "name": "_computeWidth",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 420,
              "column": 6
            },
            "end": {
              "line": 434,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueString"
            }
          ]
        },
        {
          "name": "_noAutoWidthChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 436,
              "column": 6
            },
            "end": {
              "line": 444,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "noAutoWidth"
            }
          ]
        },
        {
          "name": "_localeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 446,
              "column": 6
            },
            "end": {
              "line": 454,
              "column": 7
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "locale"
            }
          ]
        },
        {
          "name": "focus",
          "description": "focus the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 459,
              "column": 6
            },
            "end": {
              "line": 461,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "blur",
          "description": "focus the input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 466,
              "column": 6
            },
            "end": {
              "line": 468,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "formatNumber",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 470,
              "column": 6
            },
            "end": {
              "line": 497,
              "column": 7
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 14,
          "column": 2
        },
        "end": {
          "line": 499,
          "column": 3
        }
      },
      "privacy": "public",
      "name": "NumberInputMixin",
      "attributes": [
        {
          "name": "min",
          "description": "minimal input",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 17,
              "column": 10
            },
            "end": {
              "line": 19,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "max",
          "description": "maximal input",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 24,
              "column": 10
            },
            "end": {
              "line": 26,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "step",
          "description": "step for changing the input (referencing to `min` or `0`)",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 31,
              "column": 10
            },
            "end": {
              "line": 35,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "value",
          "description": "value of the input",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\form-element-mixin.html",
            "start": {
              "line": 37,
              "column": 10
            },
            "end": {
              "line": 39,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "default",
          "description": "default-value of the input",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 49,
              "column": 10
            },
            "end": {
              "line": 51,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number",
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "saturate",
          "description": "if true, the value does not revolve the range according to the maximum or the minimum",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 56,
              "column": 10
            },
            "end": {
              "line": 59,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "no-clamp",
          "description": "if true, the value does not clamp according to the given step",
          "sourceRange": {
            "file": "bower_components\\property-mixins\\range-mixin.html",
            "start": {
              "line": 64,
              "column": 10
            },
            "end": {
              "line": 67,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "RangeMixin"
        },
        {
          "name": "required",
          "description": "required attribute",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\form-element-mixin.html",
            "start": {
              "line": 16,
              "column": 10
            },
            "end": {
              "line": 18,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "disabled",
          "description": "disables the input",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\form-element-mixin.html",
            "start": {
              "line": 23,
              "column": 10
            },
            "end": {
              "line": 25,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "name",
          "description": "name of the input",
          "sourceRange": {
            "file": "bower_components\\input-picker-pattern\\form-element-mixin.html",
            "start": {
              "line": 30,
              "column": 10
            },
            "end": {
              "line": 32,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string",
          "inheritedFrom": "FormElementMixin"
        },
        {
          "name": "pad-length",
          "description": "length to pad the string (with `0`) according to the total amount of numbers",
          "sourceRange": {
            "start": {
              "line": 92,
              "column": 10
            },
            "end": {
              "line": 94,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "placeholder",
          "description": "placeholder string",
          "sourceRange": {
            "start": {
              "line": 100,
              "column": 10
            },
            "end": {
              "line": 102,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "in-percent",
          "description": "if true the value string is percent-format\nnotice: min, max and step are not in percent (so e.g. if step is 0.001, it means that the step is 0.1%)",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 10
            },
            "end": {
              "line": 112,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "no-auto-width",
          "description": "disable autosizing",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 10
            },
            "end": {
              "line": 122,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "auto-padding",
          "description": "enables auto padding",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 10
            },
            "end": {
              "line": 130,
              "column": 11
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "value-string",
          "description": "value string of the input",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 10
            },
            "end": {
              "line": 140,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "unit",
          "description": "unit of the value",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 10
            },
            "end": {
              "line": 149,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "locale",
          "description": "The current locale to set the decimal-separator automatically",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 10
            },
            "end": {
              "line": 158,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "decimal-separator",
          "description": "Separator for local decimal values",
          "sourceRange": {
            "start": {
              "line": 164,
              "column": 10
            },
            "end": {
              "line": 166,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "always-sign",
          "description": "always put the sign in the beginning",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 10
            },
            "end": {
              "line": 174,
              "column": 11
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "minimum-fraction-digits",
          "description": "minimum digits right to the decimal separator",
          "sourceRange": {
            "start": {
              "line": 180,
              "column": 10
            },
            "end": {
              "line": 183,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number"
        },
        {
          "name": "minimum-integer-digits",
          "description": "minimum digits left to the decimal separator",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 10
            },
            "end": {
              "line": 192,
              "column": 11
            }
          },
          "metadata": {},
          "type": "number"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "mixins": [
        "RangeMixin",
        "FormElementMixin"
      ]
    }
  ]
}
